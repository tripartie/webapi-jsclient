/**
 * Tripartie Web API
 * This document describes all use cases offered by the Tripartie Web API.<br /><br /> The Tripartie Web API allows you to easily create Transaction templates.<br /> A Transaction template allows a User (the Buyer) to safely initiate a Transaction pre-configured by another User (the Seller).<br /> This allows you to add a Secured Payment button on your website pages.<br /><br /> To facilitate working with the Web API, we built libraries for common development environment:<br/> <ul class=\"bullet\">   <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tripartie/webapi-jsclient\">Javascript</a></li> </ul> <br/> You're reading the documentation for version 1.0 of the Web API.<br/> Go to version <select id=\"version-switcher\"></select> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestCreateTransactionTemplatePackageFormat model module.
 * @module model/RequestCreateTransactionTemplatePackageFormat
 * @version 1.0
 */
class RequestCreateTransactionTemplatePackageFormat {
    /**
     * Constructs a new <code>RequestCreateTransactionTemplatePackageFormat</code>.
     * The package format&lt;br /&gt;&lt;strong&gt;Required for automatic shipping costs and shipping label generation.&lt;/strong&gt;
     * @alias module:model/RequestCreateTransactionTemplatePackageFormat
     */
    constructor() { 
        
        RequestCreateTransactionTemplatePackageFormat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestCreateTransactionTemplatePackageFormat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestCreateTransactionTemplatePackageFormat} obj Optional instance to populate.
     * @return {module:model/RequestCreateTransactionTemplatePackageFormat} The populated <code>RequestCreateTransactionTemplatePackageFormat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestCreateTransactionTemplatePackageFormat();

            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The package weight, in grams.
 * @member {Number} weight
 */
RequestCreateTransactionTemplatePackageFormat.prototype['weight'] = undefined;

/**
 * The package length, in centimeters.
 * @member {Number} length
 */
RequestCreateTransactionTemplatePackageFormat.prototype['length'] = undefined;

/**
 * The package height, in centimeters.
 * @member {Number} height
 */
RequestCreateTransactionTemplatePackageFormat.prototype['height'] = undefined;

/**
 * The package width, in centimeters.
 * @member {Number} width
 */
RequestCreateTransactionTemplatePackageFormat.prototype['width'] = undefined;






export default RequestCreateTransactionTemplatePackageFormat;

